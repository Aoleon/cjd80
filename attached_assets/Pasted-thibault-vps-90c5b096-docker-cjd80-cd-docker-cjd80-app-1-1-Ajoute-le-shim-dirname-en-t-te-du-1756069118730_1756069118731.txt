thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80/app

# 1.1 Ajoute le shim __dirname en tête du fichier s'il n'y est pas déjà
grep -q 'fileURLToPath' server/index.ts || {
  tmpfile=$(mktemp)
  cat > "$tmpfile" <<'TS'
import path from "path";
import { fileURLToPath } from "url";

// ESM-safe __filename / __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname  = path.dirname(__filename);

TS
  cat "$tmpfile" server/index.ts > server/index.ts.new && mv server/index.ts.new server/index.ts
  rm -f "$tmpfile"
}

# 1.2 (Optionnel) si tu avais basculé sur fileURLToPath(new URL(...)), tu peux revenir
# à tes lignes existantes qui utilisent path.join(__dirname, "../dist/public") etc. :
# le shim ci-dessus rend __dirname valide en ESM.
thibault@vps-90c5b096:/docker/cjd80/app$ # Supprime toute référence au script dev "vite-websocket-fix.js" côté source
sed -i '/vite-websocket-fix\.js/d' /docker/cjd80/app/index.html || true
sed: can't read /docker/cjd80/app/index.html: No such file or directory
thibault@vps-90c5b096:/docker/cjd80/app$ # Force le service à lancer dist/index.js
sudo sed -i 's#^\(\s*container_name:\s*cjd80-app.*\)$#\1\n    command: ["node","/app/dist/index.js"]#' /docker/cjd80/docker-compose.yml
# Si "command:" existe déjà, remplace-le :
sudo sed -i 's#^\s*command:.*#    command: ["node","/app/dist/index.js"]#' /docker/cjd80/docker-compose.yml
[sudo] password for thibault: 
thibault@vps-90c5b096:/docker/cjd80/app$ # Affiche et vérifie tes scripts (à adapter dans le repo sinon)
docker compose exec app sh -lc 'sed -n "1,160p" package.json' || true
# Tu veux idéalement :
# "build": "... && esbuild server/index.ts ... --outdir=dist",
# "start": "node dist/index.js"
line 8: mapping key "command" already defined at line 7
thibault@vps-90c5b096:/docker/cjd80/app$ cd /docker/cjd80
docker compose build --no-cache
docker compose up -d

# Vérifie que l'app est stable
docker compose ps
docker compose logs --tail=80 app
line 8: mapping key "command" already defined at line 7
line 8: mapping key "command" already defined at line 7
line 8: mapping key "command" already defined at line 7
line 8: mapping key "command" already defined at line 7
thibault@vps-90c5b096:/docker/cjd80$ # Bypass Traefik : doit renvoyer un body non vide (200)
docker compose exec app wget -qO- http://127.0.0.1:3000/api/health || true

# Via Traefik (host local) : ne doit plus être "404 page not found"
curl -sSIL -H 'Host: cjd80.fr' http://127.0.0.1/api/health | head -n 5

# HTTPS normal
curl -sSIL https://cjd80.fr/api/health | head -n 5
line 8: mapping key "command" already defined at line 7
HTTP/1.1 404 Not Found
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Sun, 24 Aug 2025 20:55:36 GMT
Content-Length: 19
HTTP/2 404 
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
content-length: 19
date: Sun, 24 Aug 2025 20:55:36 GMT
thibault@vps-90c5b096:/docker/cjd80$ # Sauvegarde
sudo cp /docker/cjd80/docker-compose.yml /docker/cjd80/docker-compose.yml.bak.$(date +%s)

# Supprime TOUTES les lignes "command:" existantes
sudo sed -i '/^[[:space:]]*command:/d' /docker/cjd80/docker-compose.yml

# Ajoute UNE ligne "command" juste après container_name: cjd80-app
sudo sed -i '/container_name:[[:space:]]*cjd80-app/a\    command: ["node","/app/dist/index.js"]' /docker/cjd80/docker-compose.yml

# Valide la syntaxe Compose
docker compose -f /docker/cjd80/docker-compose.yml config
name: cjd80
services:
  app:
    build:
      context: /docker/cjd80/app
      dockerfile: Dockerfile
    command:
      - node
      - /app/dist/index.js
    container_name: cjd80-app
    environment:
      DATABASE_URL: postgresql://neondb_owner:npg_8pJWeh2BHrVk@ep-summer-base-aeqtuqqc.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require
      NODE_ENV: production
      PORT: "3000"
      SESSION_SECRET: change-moi-par-un-long-secret-aleatoire
      VITE_API_URL: https://cjd80.fr/api
    healthcheck:
      test:
        - CMD
        - wget
        - -qO-
        - http://127.0.0.1:3000/api/health
      timeout: 5s
      interval: 30s
      retries: 3
    labels:
      traefik.docker.network: proxy
      traefik.enable: "true"
      traefik.http.routers.cjd80.entrypoints: web,websecure
      traefik.http.routers.cjd80.middlewares: gzip-compress@file
      traefik.http.routers.cjd80.rule: Host(`cjd80.fr`) || Host(`www.cjd80.fr`)
      traefik.http.routers.cjd80.service: cjd80
      traefik.http.routers.cjd80.tls.certresolver: letsencrypt
      traefik.http.services.cjd80.loadbalancer.server.port: "3000"
    networks:
      proxy: null
    restart: unless-stopped
networks:
  proxy:
    name: proxy
    external: true
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80/app

# Injecte le shim si absent (ESM-safe __dirname / __filename)
grep -q 'fileURLToPath' server/index.ts || {
  tmpfile=$(mktemp)
  cat > "$tmpfile" <<'TS'
import path from "path";
import { fileURLToPath } from "url";

// ESM-safe __filename / __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname  = path.dirname(__filename);

TS
  cat "$tmpfile" server/index.ts > server/index.ts.__patched && mv server/index.ts.__patched server/index.ts
  rm -f "$tmpfile"
}

# Contrôle visuel rapide (tu dois voir le bloc ci-dessus en tête du fichier)
sed -n '1,30p' server/index.ts
import path from "path";
import { fileURLToPath } from "url";

// ESM-safe __filename / __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname  = path.dirname(__filename);

import express, { type Request, Response, NextFunction } from "express";
import path from "path";
import { registerRoutes } from "./routes";
import { setupVite, log } from "./vite";
import { startPoolMonitoring } from "./utils/db-health";

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use((req, res, next) => {
  const start = Date.now();
  const path = req.path;
  let capturedJsonResponse: Record<string, any> | undefined = undefined;

  const originalResJson = res.json;
  res.json = function (bodyJson, ...args) {
    capturedJsonResponse = bodyJson;
    return originalResJson.apply(res, [bodyJson, ...args]);
  };

  res.on("finish", () => {
    const duration = Date.now() - start;
thibault@vps-90c5b096:/docker/cjd80/app$ cd /docker/cjd80
docker compose build --no-cache
docker compose up -d

# Vérifie que l'app ne redémarre plus
docker compose ps
docker compose logs --tail=80 app
#1 [internal] load local bake definitions
#1 reading from stdin 495B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 437B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:20-alpine
#3 DONE 0.7s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:20-alpine@sha256:df02558528d3d3d0d621f112e232611aecfee7cbc654f6b375765f72bb262799
#5 DONE 0.0s

#6 [builder 2/6] WORKDIR /app
#6 CACHED

#7 [internal] load build context
#7 transferring context: 21.70kB 0.0s done
#7 DONE 0.0s

#8 [builder 3/6] COPY package*.json ./
#8 DONE 0.0s

#9 [builder 4/6] RUN npm ci
#9 ...

#10 [runner 3/5] RUN addgroup -S cjd && adduser -S cjduser -G cjd
#10 DONE 0.3s

#9 [builder 4/6] RUN npm ci
#9 4.229 npm warn deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead
#9 5.722 npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
#9 7.186 npm warn deprecated @esbuild-kit/esm-loader@2.6.5: Merged into tsx: https://tsx.is
#9 7.216 npm warn deprecated @esbuild-kit/core-utils@3.3.2: Merged into tsx: https://tsx.is
#9 7.960 npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
#9 8.140 npm warn deprecated source-map@0.8.0-beta.0: The work that was done in this beta branch won't be included in future versions
#9 13.90 
#9 13.90 added 752 packages, and audited 753 packages in 14s
#9 13.90 
#9 13.90 138 packages are looking for funding
#9 13.90   run `npm fund` for details
#9 13.94 
#9 13.94 11 vulnerabilities (3 low, 8 moderate)
#9 13.94 
#9 13.94 To address issues that do not require attention, run:
#9 13.94   npm audit fix
#9 13.94 
#9 13.94 To address all issues (including breaking changes), run:
#9 13.94   npm audit fix --force
#9 13.94 
#9 13.94 Run `npm audit` for details.
#9 13.94 npm notice
#9 13.94 npm notice New major version of npm available! 10.8.2 -> 11.5.2
#9 13.94 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.5.2
#9 13.94 npm notice To update run: npm install -g npm@11.5.2
#9 13.94 npm notice
#9 DONE 14.1s

#11 [builder 5/6] COPY . .
#11 DONE 0.1s

#12 [builder 6/6] RUN npm run build || echo "no build step, continuing"
#12 0.369 
#12 0.369 > rest-express@1.0.0 build
#12 0.369 > vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
#12 0.369 
#12 0.606 vite v5.4.19 building for production...
#12 0.668 <script src="/vite-websocket-fix.js"> in "/index.html" can't be bundled without type="module" attribute
#12 0.676 transforming...
#12 6.445 ✓ 1853 modules transformed.
#12 6.779 rendering chunks...
#12 6.790 computing gzip size...
#12 6.809 ../dist/public/index.html                                           3.88 kB │ gzip:   1.40 kB
#12 6.809 ../dist/public/assets/logo-cjd-social_1755640197258-CD6GjZ25.jpg   20.23 kB
#12 6.810 ../dist/public/assets/boite-kiff_1755640123881-DbqMoUWI.jpeg      488.13 kB
#12 6.810 ../dist/public/assets/index-D8vo_tNz.css                           76.90 kB │ gzip:  13.09 kB
#12 6.811 
#12 6.811 (!) Some chunks are larger than 500 kB after minification. Consider:
#12 6.811 - Using dynamic import() to code-split the application
#12 6.811 - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
#12 6.811 - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
#12 6.811 ../dist/public/assets/index-gdu-yd-M.js                           580.35 kB │ gzip: 171.66 kB
#12 6.811 ✓ built in 6.18s
#12 6.866 
#12 6.866   dist/index.js  57.0kb
#12 6.866 
#12 6.866 ⚡ Done in 12ms
#12 DONE 6.9s

#13 [runner 4/5] COPY --from=builder /app /app
#13 DONE 8.2s

#14 [runner 5/5] RUN chown -R cjduser:cjd /app
#14 DONE 23.4s

#15 exporting to image
#15 exporting layers
#15 exporting layers 7.4s done
#15 writing image sha256:9a405fd76fc818e6a3cd0566fb953d20873bb3bbf22d5b9841b7e3545e8b243f done
#15 naming to docker.io/library/cjd80-app done
#15 DONE 7.4s

#16 resolving provenance for metadata file
#16 DONE 0.0s
[+] Building 1/1
 ✔ cjd80-app  Built                                                                                 0.0s 
[+] Running 1/1
 ✔ Container cjd80-app  Started                                                                     0.2s 
NAME        IMAGE       COMMAND                  SERVICE   CREATED                  STATUS                                     PORTS
cjd80-app   cjd80-app   "docker-entrypoint.s…"   app       Less than a second ago   Up Less than a second (health: starting)   3000/tcp
thibault@vps-90c5b096:/docker/cjd80$ # Dans le conteneur (bypass Traefik) — doit renvoyer un body non vide
docker compose exec app wget -S -O- http://127.0.0.1:3000/api/health || true

# Via Traefik (host local) — ne doit plus être "404 page not found"
curl -sSIL -H 'Host: cjd80.fr' http://127.0.0.1/api/health | head -n 5

# HTTPS normal
curl -sSIL https://cjd80.fr/api/health | head -n 5
Connecting to 127.0.0.1:3000 (127.0.0.1:3000)
  HTTP/1.1 404 Not Found
wget: server returned error: HTTP/1.1 404 Not Found
HTTP/1.1 404 Not Found
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Sun, 24 Aug 2025 20:57:49 GMT
Content-Length: 19
HTTP/2 404 
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
content-length: 19
date: Sun, 24 Aug 2025 20:57:49 GMT
thibault@vps-90c5b096:/docker/cjd80$ # Vérifie que le build a bien produit dist/index.js et le répertoire public
docker compose exec app sh -lc 'ls -la /app/dist | head; ls -la /app/dist/public | head || true'
total 84
drwxr-xr-x    1 cjduser  cjd           4096 Aug 24 20:57 .
drwxr-xr-x    1 cjduser  cjd           4096 Aug 24 20:57 ..
-rw-r--r--    1 cjduser  cjd          58370 Aug 24 20:57 index.js
drwxr-xr-x    1 cjduser  cjd           4096 Aug 24 20:57 public
total 60
drwxr-xr-x    1 cjduser  cjd           4096 Aug 24 20:57 .
drwxr-xr-x    1 cjduser  cjd           4096 Aug 24 20:57 ..
drwxr-xr-x    1 cjduser  cjd           4096 Aug 24 20:57 assets
-rw-r--r--    1 cjduser  cjd            239 Aug 24 20:57 browserconfig.xml
-rw-r--r--    1 cjduser  cjd            433 Aug 24 20:57 icon-192.svg
-rw-r--r--    1 cjduser  cjd            650 Aug 24 20:57 icon-512.svg
-rw-r--r--    1 cjduser  cjd           3893 Aug 24 20:57 index.html
-rw-r--r--    1 cjduser  cjd           2048 Aug 24 20:57 manifest.json
-rw-r--r--    1 cjduser  cjd          12738 Aug 24 20:57 sw.js