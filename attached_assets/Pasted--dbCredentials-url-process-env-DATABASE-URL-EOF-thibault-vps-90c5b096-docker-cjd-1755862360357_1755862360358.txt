  dbCredentials: {
    url: process.env.DATABASE_URL,
  },
};
EOF'
thibault@vps-90c5b096:/docker/cjd80$ docker compose exec app sh -lc 'npx -y drizzle-kit@0.31.4 push --config ./drizzle.config.mjs'
npm warn deprecated @esbuild-kit/esm-loader@2.6.5: Merged into tsx: https://tsx.is
npm warn deprecated @esbuild-kit/core-utils@3.3.2: Merged into tsx: https://tsx.is
Reading config file '/app/drizzle.config.mjs'
Error please install required packages: 'drizzle-orm'
thibault@vps-90c5b096:/docker/cjd80$ docker compose exec postgres psql -U cjduser -d cjd_amiens -c '\dt public.*'
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "
DO \$\$ DECLARE r record; BEGIN
  FOR r IN SELECT schemaname, tablename FROM pg_tables WHERE schemaname=''public'' LOOP
    EXECUTE format('SELECT ''%s.%s'' AS table, count(*) FROM %I.%I', r.schemaname, r.tablename, r.schemaname, r.tablename);
  END LOOP; END \$\$;"
Did not find any relation named "public.*".
ERROR:  syntax error at or near "public"
LINE 3: ...name, tablename FROM pg_tables WHERE schemaname=''public'' L...
                                                             ^
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80
docker compose up -d
docker compose logs --tail=120 app
[+] Running 2/2
 ✔ Container cjd80-postgres  Running                                                                0.0s 
 ✔ Container cjd80-app       Running                                                                0.0s 
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:15:32 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:16:02 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:16:32 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:17:02 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:17:32 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:18:02 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:18:32 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:19:02 AM [express] GET /api/health 200 in 3ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:19:32 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:20:02 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:20:32 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:21:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:21:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:22:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:22:33 AM [express] GET /api/health 200 in 1ms
thibault@vps-90c5b096:/docker/cjd80$ export DATABASE_URL_SOURCE='postgresql://neondb_owner:npg_8pJWeh2BHrVk@ep-summer-base-aeqtuqqc.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require'
export PGHOST='ep-summer-base-aeqtuqqc.c-2.us-east-2.aws.neon.tech'
export PGPORT='5432'
export PGUSER='neondb_owner'
export PGPASSWORD='npg_8pJWeh2BHrVk'
export PGDATABASE='neondb'
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80

# Crée/écrase un dump compact compatible (format "custom")
docker run --rm \
  -e DATABASE_URL="$DATABASE_URL_SOURCE" \
  -v "$(pwd)":/backup \
  postgres:16-alpine sh -lc '
    apk add --no-cache ca-certificates >/dev/null 2>&1 || true
    pg_dump "$DATABASE_URL" --no-owner --format=custom -f /backup/neon_backup.dump
  '

# Vérifie que le fichier est bien là
ls -lh /docker/cjd80/neon_backup.dump
-rw-r--r-- 1 root root 15K Aug 22 11:25 /docker/cjd80/neon_backup.dump
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80

# (sécurité) s'assurer que le schéma public existe
docker compose exec postgres psql -U cjduser -d cjd_amiens -c 'CREATE SCHEMA IF NOT EXISTS public;'

# Restore depuis le dump
docker compose exec -T postgres pg_restore \
  -U cjduser \
  -d cjd_amiens \
  --no-owner \
  --clean \
  /var/lib/postgresql/data/../neon_restore_placeholder 2>/dev/null || true
NOTICE:  schema "public" already exists, skipping
CREATE SCHEMA
thibault@vps-90c5b096:/docker/cjd80$ # Bonne commande: on pipe le dump depuis l'hôte vers le conteneur
docker compose exec -T postgres pg_restore -U cjduser -d cjd_amiens --no-owner --clean < /docker/cjd80/neon_backup.dump
pg_restore: error: could not execute query: ERROR:  relation "public.votes" does not exist
Command was: ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_idea_id_ideas_id_fk;
pg_restore: error: could not execute query: ERROR:  relation "public.inscriptions" does not exist
Command was: ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_event_id_events_id_fk;
pg_restore: error: could not execute query: ERROR:  index "IDX_session_expire" does not exist
Command was: DROP INDEX public."IDX_session_expire";
pg_restore: error: could not execute query: ERROR:  relation "public.votes" does not exist
Command was: ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_pkey;
pg_restore: error: could not execute query: ERROR:  relation "public.votes" does not exist
Command was: ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_idea_id_voter_email_unique;
pg_restore: error: could not execute query: ERROR:  relation "public.user_sessions" does not exist
Command was: ALTER TABLE ONLY public.user_sessions DROP CONSTRAINT session_pkey;
pg_restore: error: could not execute query: ERROR:  relation "public.inscriptions" does not exist
Command was: ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_pkey;
pg_restore: error: could not execute query: ERROR:  relation "public.inscriptions" does not exist
Command was: ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_event_id_email_unique;
pg_restore: error: could not execute query: ERROR:  relation "public.ideas" does not exist
Command was: ALTER TABLE ONLY public.ideas DROP CONSTRAINT ideas_pkey;
pg_restore: error: could not execute query: ERROR:  relation "public.events" does not exist
Command was: ALTER TABLE ONLY public.events DROP CONSTRAINT events_pkey;
pg_restore: error: could not execute query: ERROR:  relation "public.admins" does not exist
Command was: ALTER TABLE ONLY public.admins DROP CONSTRAINT admins_pkey;
pg_restore: error: could not execute query: ERROR:  table "votes" does not exist
Command was: DROP TABLE public.votes;
pg_restore: error: could not execute query: ERROR:  table "user_sessions" does not exist
Command was: DROP TABLE public.user_sessions;
pg_restore: error: could not execute query: ERROR:  table "inscriptions" does not exist
Command was: DROP TABLE public.inscriptions;
pg_restore: error: could not execute query: ERROR:  table "ideas" does not exist
Command was: DROP TABLE public.ideas;
pg_restore: error: could not execute query: ERROR:  table "events" does not exist
Command was: DROP TABLE public.events;
pg_restore: error: could not execute query: ERROR:  table "admins" does not exist
Command was: DROP TABLE public.admins;
pg_restore: error: could not execute query: ERROR:  role "neon_superuser" does not exist
Command was: ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO neon_superuser WITH GRANT OPTION;


pg_restore: error: could not execute query: ERROR:  role "neon_superuser" does not exist
Command was: ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON TABLES TO neon_superuser WITH GRANT OPTION;


pg_restore: warning: errors ignored on restore: 19
thibault@vps-90c5b096:/docker/cjd80$ # Liste des tables
docker compose exec postgres psql -U cjduser -d cjd_amiens -c '\dt public.*'

# Compter les lignes par table (vue rapide)
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "
DO \$\$ DECLARE r record; BEGIN
  FOR r IN SELECT schemaname, tablename FROM pg_tables WHERE schemaname='public' LOOP
    EXECUTE format('SELECT ''%s.%s'' AS table, count(*) FROM %I.%I', r.schemaname, r.tablename, r.schemaname, r.tablename);
  END LOOP; END \$\$;"
            List of relations
 Schema |     Name      | Type  |  Owner  
--------+---------------+-------+---------
 public | admins        | table | cjduser
 public | events        | table | cjduser
 public | ideas         | table | cjduser
 public | inscriptions  | table | cjduser
 public | user_sessions | table | cjduser
 public | votes         | table | cjduser
(6 rows)

DO
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80
docker compose up -d
docker compose logs --tail=120 app
# Endpoint santé + (si tu as une route qui liste des données, teste-la)
curl -I https://cjd80.fr/api/health || true
[+] Running 2/2
 ✔ Container cjd80-postgres  Running                                                                0.0s 
 ✔ Container cjd80-app       Running                                                                0.0s 
cjd80-app  | }
cjd80-app  | 11:18:32 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:19:02 AM [express] GET /api/health 200 in 3ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:19:32 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:20:02 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:20:32 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:21:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:21:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:22:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:22:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:23:03 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:23:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | 11:23:35 AM [express] GET /api/user 401 in 0ms
cjd80-app  | 11:23:35 AM [express] GET /api/ideas 304 in 3ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:23:36 AM [express] GET /api/user 401 in 1ms
cjd80-app  | 11:23:36 AM [express] GET /api/ideas 304 in 3ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:23:37 AM [express] GET /api/user 401 in 1ms
cjd80-app  | 11:23:37 AM [express] GET /api/ideas 304 in 5ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:24:03 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:24:33 AM [express] GET /api/health 200 in 3ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:25:03 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:25:33 AM [express] GET /api/health 200 in 1ms
HTTP/2 200 
accept-ranges: bytes
cache-control: public, max-age=0
content-type: text/html; charset=UTF-8
date: Fri, 22 Aug 2025 11:25:46 GMT
etag: W/"f35-198d13a889c"
last-modified: Fri, 22 Aug 2025 10:02:10 GMT
x-powered-by: Express
content-length: 3893

thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80

# Compter par table
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "SELECT 
  (SELECT count(*) FROM admins)        AS admins,
  (SELECT count(*) FROM events)        AS events,
  (SELECT count(*) FROM ideas)         AS ideas,
  (SELECT count(*) FROM inscriptions)  AS inscriptions,
  (SELECT count(*) FROM user_sessions) AS user_sessions,
  (SELECT count(*) FROM votes)         AS votes;"

# Voir quelques lignes utiles
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "TABLE ideas LIMIT 5;"
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "TABLE events LIMIT 5;"
 admins | events | ideas | inscriptions | user_sessions | votes 
--------+--------+-------+--------------+---------------+-------
      3 |      5 |    19 |           11 |             3 |    13
(1 row)

                  id                  |                    title                    |                                                                                                                                                                                       description                                                                                                                                                                                       |         created_at         | proposed_by |     proposed_by_email      | deadline |         updated_at         | updated_by |  status  

 0d276fc7-d480-4705-aa00-755528b2ce52 | J'aimerais participer à une belle randonnée |                                                                                                                                                                                                                                                                                                                                                                                         | 2025-08-19 21:18:19.963038 | Membre CJD  | membre@cjd-amiens.fr       |          | 2025-08-19 21:18:19.963038 |            | approved
 af8ac74f-fd1e-41a3-9831-70e7f9bd9be2 | Aller voir ensemble un match de hockey      |                                                                                                                                                                                                                                                                                                                                                                                         | 2025-08-19 21:18:20.00052  | Membre CJD  | membre@cjd-amiens.fr       |          | 2025-08-19 21:18:20.00052  |            | approved
 1a84d42a-a129-4617-b4e9-5babaf1408c0 | Cours de Rock !                             |                                                                                                                                                                                                                                                                                                                                                                                         | 2025-08-19 21:18:20.074971 | Membre CJD  | membre@cjd-amiens.fr       |          | 2025-08-19 21:18:20.074971 |            | approved
 b702e02c-aec9-4a9b-80ba-bf8d54e5e8c6 | Des cours de self défense!                  | Non le monde n'est pas composé que d'entrepreneurs ecolos sympas                                                                                                                                                                                                                                                                                                                        | 2025-08-19 21:18:20.112086 | Celine D    | celine@cjd-amiens.fr       |          | 2025-08-19 21:18:20.112086 |            | approved
 d7806e54-d575-45df-be8c-54bb4c62eccd | Un arbre - un JD                            | 🌲🌴🌳 Créer une micro forêt urbaine en association avec une collectivité locale ou une école ou une association de quartier défavorisé? Pour planter des arbres ensemble, et dédramatiser dans les cités le rôle du dirigeant, prouver que l'on peut co construire l'avenir? Organiser le projet + des journées plantation + actions de sensibilisation… la forêt enchantée 🤩 du CJD! | 2025-08-19 21:18:20.149014 | Celine D    | cdailly@gonthiez-freres.fr |          | 2025-08-19 21:18:20.149014 |            | approved
(5 rows)

                  id                  |               title                |                                              description                                               |        date         |         created_at         |                                                          hello_asso_link                                                           |         updated_at         | updated_by |             location             | max_participants |  status   
--------------------------------------+------------------------------------+--------------------------------------------------------------------------------------------------------+---------------------+----------------------------+------------------------------------------------------------------------------------------------------------------------------------+----------------------------+------------+----------------------------------+------------------+-----------
 8a8adb01-46b6-400d-8c8a-27a09ac10670 | Séminaire de rentrée CJD 2025      | Mont St Michel - Weekend de rentrée pour tous les membres                                              | 2025-09-15 09:00:00 | 2025-08-19 21:18:20.518273 | https://www.helloasso.com/associations/centre-des-jeunes-dirigeants-de-la-section-d-amiens/paiements/seminaire-de-rentree-cjd-2025 | 2025-08-19 21:18:20.518273 |            | Mont Saint-Michel                |                  | published
 c3d2cd27-a83c-44c9-9216-93c540b7f555 | Formation IA Niveau 1              | Le 7 et 8 octobre à Amiens 860€HT. Formation intensive sur l'intelligence artificielle pour dirigeants | 2025-10-07 09:00:00 | 2025-08-19 21:18:20.556459 |                                                                                                                                    | 2025-08-19 21:18:20.556459 |            | Amiens - Centre de formation CJD |                  | published
 12360c34-1ad8-4393-9347-d0f2043e3f91 | Formation IA Niveau 2              | 9 et 10 Octobre à Amiens - Approfondissement IA                                                        | 2025-10-09 09:00:00 | 2025-08-19 21:18:20.593393 |                                                                                                                                    | 2025-08-19 21:18:20.593393 |            | Amiens - Centre de formation CJD |                  | published
 762c2785-2a24-421b-ae39-dd716e544c1a | Assemblée Générale CJD Amiens 2025 | Assemblée générale annuelle - présentation des projets et votes                                        | 2025-11-20 18:30:00 | 2025-08-19 21:18:20.630024 |                                                                                                                                    | 2025-08-19 21:18:20.630024 |            | Amiens - Siège CJD               |                  | published
 4ba276f9-10e4-4d8b-ba73-7e8342c0218c | Afterwork Innovation & Numérique   | Soirée networking autour des innovations numériques                                                    | 2025-12-05 18:00:00 | 2025-08-19 21:18:20.66656  |                                                                                                                                    | 2025-08-19 21:18:20.66656  |            | Amiens - La Halle aux Idées      |                  | published
(5 rows)

thibault@vps-90c5b096:/docker/cjd80$ # Vérifie l'URL DB dans l'env du conteneur
docker compose exec app sh -lc 'printenv | grep ^DATABASE_URL='
# Attendu : postgresql://cjduser:BY7Lrta5jBI49aAX@postgres:5432/cjd_amiens  (sans sslmode=require)

# Test TCP simple
docker compose exec app sh -lc 'nc -zv postgres 5432 || true'
DATABASE_URL=postgresql://cjduser:BY7Lrta5jBI49aAX@postgres:5432/cjd_amiens
postgres (172.18.0.3:5432) open
thibault@vps-90c5b096:/docker/cjd80$ docker compose exec app sh -lc 'apk add --no-cache postgresql-client 2>/dev/null || true'
docker compose exec app sh -lc 'psql "$DATABASE_URL" -c "SELECT count(*) FROM ideas;"'
sh: psql: not found
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80
docker compose up -d
docker compose logs --tail=120 app
curl -sSIL https://cjd80.fr/api/ideas | head -n 5 || true
[+] Running 2/2
 ✔ Container cjd80-postgres  Running                                                                0.0s 
 ✔ Container cjd80-app       Running                                                                0.0s 
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:21:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:22:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:22:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:23:03 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:23:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | 11:23:35 AM [express] GET /api/user 401 in 0ms
cjd80-app  | 11:23:35 AM [express] GET /api/ideas 304 in 3ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:23:36 AM [express] GET /api/user 401 in 1ms
cjd80-app  | 11:23:36 AM [express] GET /api/ideas 304 in 3ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:23:37 AM [express] GET /api/user 401 in 1ms
cjd80-app  | 11:23:37 AM [express] GET /api/ideas 304 in 5ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:24:03 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:24:33 AM [express] GET /api/health 200 in 3ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:25:03 AM [express] GET /api/health 200 in 2ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:25:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | 11:25:46 AM [express] HEAD /api/health 200 in 1ms
cjd80-app  | 11:25:58 AM [express] GET /api/user 401 in 2ms
cjd80-app  | 11:25:58 AM [express] GET /api/ideas 304 in 3ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:25:58 AM [express] GET /api/user 401 in 0ms
cjd80-app  | 11:25:58 AM [express] GET /api/ideas 304 in 4ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:26:00 AM [express] GET /api/events 304 in 3ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:26:02 AM [express] GET /api/user 401 in 0ms
cjd80-app  | 11:26:02 AM [express] GET /api/ideas 304 in 4ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:26:03 AM [express] GET /api/user 401 in 2ms
cjd80-app  | 11:26:03 AM [express] GET /api/ideas 304 in 5ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | 11:26:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | 11:26:03 AM [express] GET /api/user 401 in 0ms
cjd80-app  | 11:26:03 AM [express] GET /api/ideas 304 in 4ms :: {"success":false,"error":{"name":"DatabaseError"}}
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:26:33 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:27:03 AM [express] GET /api/health 200 in 1ms
cjd80-app  | [DB Optimizer] Statistiques actuelles: {
cjd80-app  |   totalCount: 0,
cjd80-app  |   idleCount: 0,
cjd80-app  |   waitingCount: 0,
cjd80-app  |   max: undefined,
cjd80-app  |   min: undefined
cjd80-app  | }
cjd80-app  | 11:27:33 AM [express] GET /api/health 200 in 2ms
HTTP/2 200 
content-type: application/json; charset=utf-8
date: Fri, 22 Aug 2025 11:27:37 GMT
etag: W/"32-507/acgbKIJNkAs/JSgAtAk9lH8"
x-powered-by: Express
thibault@vps-90c5b096:/docker/cjd80$ # depuis /docker/cjd80
docker run --rm -it --network=proxy postgres:16-alpine sh -lc \
'PGPASSWORD="BY7Lrta5jBI49aAX" psql -h postgres -U cjduser -d cjd_amiens -c "SELECT count(*) FROM ideas;"'
 count 
-------
    19
(1 row)

thibault@vps-90c5b096:/docker/cjd80$ # A) Ouvre un suivi des logs Postgres
cd /docker/cjd80
docker compose logs -f postgres
cjd80-postgres  | The files belonging to this database system will be owned by user "postgres".
cjd80-postgres  | This user must also own the server process.
cjd80-postgres  | 
cjd80-postgres  | The database cluster will be initialized with locale "en_US.utf8".
cjd80-postgres  | The default database encoding has accordingly been set to "UTF8".
cjd80-postgres  | The default text search configuration will be set to "english".
cjd80-postgres  | 
cjd80-postgres  | Data page checksums are disabled.
cjd80-postgres  | 
cjd80-postgres  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
cjd80-postgres  | creating subdirectories ... ok
cjd80-postgres  | selecting dynamic shared memory implementation ... posix
cjd80-postgres  | selecting default max_connections ... 100
cjd80-postgres  | selecting default shared_buffers ... 128MB
cjd80-postgres  | selecting default time zone ... UTC
cjd80-postgres  | creating configuration files ... ok
cjd80-postgres  | running bootstrap script ... ok
cjd80-postgres  | sh: locale: not found
cjd80-postgres  | 2025-08-22 10:02:57.618 UTC [37] WARNING:  no usable system locales were found
cjd80-postgres  | performing post-bootstrap initialization ... ok
cjd80-postgres  | syncing data to disk ... ok
cjd80-postgres  | 
cjd80-postgres  | 
cjd80-postgres  | Success. You can now start the database server using:
cjd80-postgres  | initdb: warning: enabling "trust" authentication for local connections
cjd80-postgres  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
cjd80-postgres  | 
cjd80-postgres  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
cjd80-postgres  | 
cjd80-postgres  | waiting for server to start....2025-08-22 10:02:58.235 UTC [43] LOG:  starting PostgreSQL 16.10 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
cjd80-postgres  | 2025-08-22 10:02:58.236 UTC [43] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
cjd80-postgres  | 2025-08-22 10:02:58.239 UTC [46] LOG:  database system was shut down at 2025-08-22 10:02:58 UTC
cjd80-postgres  | 2025-08-22 10:02:58.248 UTC [43] LOG:  database system is ready to accept connections
cjd80-postgres  |  done
cjd80-postgres  | server started
cjd80-postgres  | CREATE DATABASE
cjd80-postgres  | 
cjd80-postgres  | 
cjd80-postgres  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
cjd80-postgres  | 
cjd80-postgres  | 2025-08-22 10:02:58.396 UTC [43] LOG:  received fast shutdown request
cjd80-postgres  | waiting for server to shut down....2025-08-22 10:02:58.397 UTC [43] LOG:  aborting any active transactions
cjd80-postgres  | 2025-08-22 10:02:58.404 UTC [43] LOG:  background worker "logical replication launcher" (PID 49) exited with exit code 1
cjd80-postgres  | 2025-08-22 10:02:58.414 UTC [44] LOG:  shutting down
cjd80-postgres  | 2025-08-22 10:02:58.415 UTC [44] LOG:  checkpoint starting: shutdown immediate
cjd80-postgres  | 2025-08-22 10:02:58.449 UTC [44] LOG:  checkpoint complete: wrote 926 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.015 s, total=0.036 s; sync files=301, longest=0.001 s, average=0.001 s; distance=4272 kB, estimate=4272 kB; lsn=0/191E920, redo lsn=0/191E920
cjd80-postgres  | 2025-08-22 10:02:58.459 UTC [43] LOG:  database system is shut down
cjd80-postgres  |  done
cjd80-postgres  | server stopped
cjd80-postgres  | 
cjd80-postgres  | PostgreSQL init process complete; ready for start up.
cjd80-postgres  | 
cjd80-postgres  | 2025-08-22 10:02:58.520 UTC [1] LOG:  starting PostgreSQL 16.10 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
cjd80-postgres  | 2025-08-22 10:02:58.520 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
cjd80-postgres  | 2025-08-22 10:02:58.520 UTC [1] LOG:  listening on IPv6 address "::", port 5432
cjd80-postgres  | 2025-08-22 10:02:58.522 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
cjd80-postgres  | 2025-08-22 10:02:58.525 UTC [59] LOG:  database system was shut down at 2025-08-22 10:02:58 UTC
cjd80-postgres  | 2025-08-22 10:02:58.530 UTC [1] LOG:  database system is ready to accept connections
cjd80-postgres  | 2025-08-22 10:07:58.558 UTC [57] LOG:  checkpoint starting: time
cjd80-postgres  | 2025-08-22 10:08:02.774 UTC [57] LOG:  checkpoint complete: wrote 45 buffers (0.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=4.211 s, sync=0.002 s, total=4.216 s; sync files=12, longest=0.001 s, average=0.001 s; distance=260 kB, estimate=260 kB; lsn=0/195FC00, redo lsn=0/195FBC8
cjd80-postgres  | 2025-08-22 10:34:21.385 UTC [174] ERROR:  relation "_prisma_migrations" does not exist at character 34
cjd80-postgres  | 2025-08-22 10:34:21.385 UTC [174] STATEMENT:  SELECT id, name, created_at FROM _prisma_migrations ORDER BY created_at DESC LIMIT 5;
cjd80-postgres  | 2025-08-22 10:34:21.513 UTC [182] ERROR:  relation "drizzle.__drizzle_migrations" does not exist at character 15
cjd80-postgres  | 2025-08-22 10:34:21.513 UTC [182] STATEMENT:  SELECT * FROM "drizzle"."__drizzle_migrations" ORDER BY created_at DESC LIMIT 5;
cjd80-postgres  | 2025-08-22 11:22:53.478 UTC [373] ERROR:  syntax error at or near "public" at character 106
cjd80-postgres  | 2025-08-22 11:22:53.478 UTC [373] STATEMENT:  
cjd80-postgres  | 	DO $$ DECLARE r record; BEGIN
cjd80-postgres  | 	  FOR r IN SELECT schemaname, tablename FROM pg_tables WHERE schemaname=''public'' LOOP
cjd80-postgres  | 	    EXECUTE format('SELECT ''%s.%s'' AS table, count(*) FROM %I.%I', r.schemaname, r.tablename, r.schemaname, r.tablename);
cjd80-postgres  | 	  END LOOP; END $$;
cjd80-postgres  | 2025-08-22 11:25:37.037 UTC [402] ERROR:  relation "public.votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.037 UTC [402] STATEMENT:  ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_idea_id_ideas_id_fk;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_event_id_events_id_fk;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  index "IDX_session_expire" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  DROP INDEX public."IDX_session_expire";
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_idea_id_voter_email_unique;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.user_sessions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.user_sessions DROP CONSTRAINT session_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_event_id_email_unique;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.ideas" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.ideas DROP CONSTRAINT ideas_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.events" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.events DROP CONSTRAINT events_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.admins" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.admins DROP CONSTRAINT admins_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  table "votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  DROP TABLE public.votes;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  table "user_sessions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  DROP TABLE public.user_sessions;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  table "inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  DROP TABLE public.inscriptions;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] ERROR:  table "ideas" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] STATEMENT:  DROP TABLE public.ideas;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] ERROR:  table "events" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] STATEMENT:  DROP TABLE public.events;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] ERROR:  table "admins" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] STATEMENT:  DROP TABLE public.admins;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] ERROR:  role "neon_superuser" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] STATEMENT:  ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO neon_superuser WITH GRANT OPTION;
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] ERROR:  role "neon_superuser" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] STATEMENT:  ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON TABLES TO neon_superuser WITH GRANT OPTION;
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:27:59.802 UTC [57] LOG:  checkpoint starting: time
cjd80-postgres  | 2025-08-22 11:28:07.332 UTC [57] LOG:  checkpoint complete: wrote 76 buffers (0.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=7.521 s, sync=0.005 s, total=7.530 s; sync files=66, longest=0.001 s, average=0.001 s; distance=322 kB, estimate=322 kB; lsn=0/19B0548, redo lsn=0/19B0510
^C
^X
thibault@vps-90c5b096:/docker/cjd80$ # A) Ouvre un suivi des logs Postgreses
cd /docker/cjd80
docker compose logs -f postgres
cjd80-postgres  | The files belonging to this database system will be owned by user "postgres".
cjd80-postgres  | This user must also own the server process.
cjd80-postgres  | 
cjd80-postgres  | The database cluster will be initialized with locale "en_US.utf8".
cjd80-postgres  | The default database encoding has accordingly been set to "UTF8".
cjd80-postgres  | The default text search configuration will be set to "english".
cjd80-postgres  | 
cjd80-postgres  | Data page checksums are disabled.
cjd80-postgres  | 
cjd80-postgres  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
cjd80-postgres  | creating subdirectories ... ok
cjd80-postgres  | selecting dynamic shared memory implementation ... posix
cjd80-postgres  | selecting default max_connections ... 100
cjd80-postgres  | selecting default shared_buffers ... 128MB
cjd80-postgres  | selecting default time zone ... UTC
cjd80-postgres  | creating configuration files ... ok
cjd80-postgres  | running bootstrap script ... ok
cjd80-postgres  | sh: locale: not found
cjd80-postgres  | 2025-08-22 10:02:57.618 UTC [37] WARNING:  no usable system locales were found
cjd80-postgres  | performing post-bootstrap initialization ... ok
cjd80-postgres  | syncing data to disk ... ok
cjd80-postgres  | 
cjd80-postgres  | 
cjd80-postgres  | Success. You can now start the database server using:
cjd80-postgres  | initdb: warning: enabling "trust" authentication for local connections
cjd80-postgres  | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
cjd80-postgres  | 
cjd80-postgres  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
cjd80-postgres  | 
cjd80-postgres  | waiting for server to start....2025-08-22 10:02:58.235 UTC [43] LOG:  starting PostgreSQL 16.10 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
cjd80-postgres  | 2025-08-22 10:02:58.236 UTC [43] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
cjd80-postgres  | 2025-08-22 10:02:58.239 UTC [46] LOG:  database system was shut down at 2025-08-22 10:02:58 UTC
cjd80-postgres  | 2025-08-22 10:02:58.248 UTC [43] LOG:  database system is ready to accept connections
cjd80-postgres  |  done
cjd80-postgres  | server started
cjd80-postgres  | CREATE DATABASE
cjd80-postgres  | 
cjd80-postgres  | 
cjd80-postgres  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
cjd80-postgres  | 
cjd80-postgres  | 2025-08-22 10:02:58.396 UTC [43] LOG:  received fast shutdown request
cjd80-postgres  | waiting for server to shut down....2025-08-22 10:02:58.397 UTC [43] LOG:  aborting any active transactions
cjd80-postgres  | 2025-08-22 10:02:58.404 UTC [43] LOG:  background worker "logical replication launcher" (PID 49) exited with exit code 1
cjd80-postgres  | 2025-08-22 10:02:58.414 UTC [44] LOG:  shutting down
cjd80-postgres  | 2025-08-22 10:02:58.415 UTC [44] LOG:  checkpoint starting: shutdown immediate
cjd80-postgres  | 2025-08-22 10:02:58.449 UTC [44] LOG:  checkpoint complete: wrote 926 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.015 s, total=0.036 s; sync files=301, longest=0.001 s, average=0.001 s; distance=4272 kB, estimate=4272 kB; lsn=0/191E920, redo lsn=0/191E920
cjd80-postgres  | 2025-08-22 10:02:58.459 UTC [43] LOG:  database system is shut down
cjd80-postgres  |  done
cjd80-postgres  | server stopped
cjd80-postgres  | 
cjd80-postgres  | PostgreSQL init process complete; ready for start up.
cjd80-postgres  | 
cjd80-postgres  | 2025-08-22 10:02:58.520 UTC [1] LOG:  starting PostgreSQL 16.10 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
cjd80-postgres  | 2025-08-22 10:02:58.520 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
cjd80-postgres  | 2025-08-22 10:02:58.520 UTC [1] LOG:  listening on IPv6 address "::", port 5432
cjd80-postgres  | 2025-08-22 10:02:58.522 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
cjd80-postgres  | 2025-08-22 10:02:58.525 UTC [59] LOG:  database system was shut down at 2025-08-22 10:02:58 UTC
cjd80-postgres  | 2025-08-22 10:02:58.530 UTC [1] LOG:  database system is ready to accept connections
cjd80-postgres  | 2025-08-22 10:07:58.558 UTC [57] LOG:  checkpoint starting: time
cjd80-postgres  | 2025-08-22 10:08:02.774 UTC [57] LOG:  checkpoint complete: wrote 45 buffers (0.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=4.211 s, sync=0.002 s, total=4.216 s; sync files=12, longest=0.001 s, average=0.001 s; distance=260 kB, estimate=260 kB; lsn=0/195FC00, redo lsn=0/195FBC8
cjd80-postgres  | 2025-08-22 10:34:21.385 UTC [174] ERROR:  relation "_prisma_migrations" does not exist at character 34
cjd80-postgres  | 2025-08-22 10:34:21.385 UTC [174] STATEMENT:  SELECT id, name, created_at FROM _prisma_migrations ORDER BY created_at DESC LIMIT 5;
cjd80-postgres  | 2025-08-22 10:34:21.513 UTC [182] ERROR:  relation "drizzle.__drizzle_migrations" does not exist at character 15
cjd80-postgres  | 2025-08-22 10:34:21.513 UTC [182] STATEMENT:  SELECT * FROM "drizzle"."__drizzle_migrations" ORDER BY created_at DESC LIMIT 5;
cjd80-postgres  | 2025-08-22 11:22:53.478 UTC [373] ERROR:  syntax error at or near "public" at character 106
cjd80-postgres  | 2025-08-22 11:22:53.478 UTC [373] STATEMENT:  
cjd80-postgres  | 	DO $$ DECLARE r record; BEGIN
cjd80-postgres  | 	  FOR r IN SELECT schemaname, tablename FROM pg_tables WHERE schemaname=''public'' LOOP
cjd80-postgres  | 	    EXECUTE format('SELECT ''%s.%s'' AS table, count(*) FROM %I.%I', r.schemaname, r.tablename, r.schemaname, r.tablename);
cjd80-postgres  | 	  END LOOP; END $$;
cjd80-postgres  | 2025-08-22 11:25:37.037 UTC [402] ERROR:  relation "public.votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.037 UTC [402] STATEMENT:  ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_idea_id_ideas_id_fk;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_event_id_events_id_fk;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  index "IDX_session_expire" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  DROP INDEX public."IDX_session_expire";
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.votes DROP CONSTRAINT votes_idea_id_voter_email_unique;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.user_sessions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.user_sessions DROP CONSTRAINT session_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] ERROR:  relation "public.inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.038 UTC [402] STATEMENT:  ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.inscriptions DROP CONSTRAINT inscriptions_event_id_email_unique;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.ideas" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.ideas DROP CONSTRAINT ideas_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.events" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.events DROP CONSTRAINT events_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  relation "public.admins" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  ALTER TABLE ONLY public.admins DROP CONSTRAINT admins_pkey;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  table "votes" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  DROP TABLE public.votes;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  table "user_sessions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  DROP TABLE public.user_sessions;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] ERROR:  table "inscriptions" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.039 UTC [402] STATEMENT:  DROP TABLE public.inscriptions;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] ERROR:  table "ideas" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] STATEMENT:  DROP TABLE public.ideas;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] ERROR:  table "events" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] STATEMENT:  DROP TABLE public.events;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] ERROR:  table "admins" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.040 UTC [402] STATEMENT:  DROP TABLE public.admins;
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] ERROR:  role "neon_superuser" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] STATEMENT:  ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO neon_superuser WITH GRANT OPTION;
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] ERROR:  role "neon_superuser" does not exist
cjd80-postgres  | 2025-08-22 11:25:37.092 UTC [402] STATEMENT:  ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON TABLES TO neon_superuser WITH GRANT OPTION;
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 	
cjd80-postgres  | 2025-08-22 11:27:59.802 UTC [57] LOG:  checkpoint starting: time
cjd80-postgres  | 2025-08-22 11:28:07.332 UTC [57] LOG:  checkpoint complete: wrote 76 buffers (0.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=7.521 s, sync=0.005 s, total=7.530 s; sync files=66, longest=0.001 s, average=0.001 s; distance=322 kB, estimate=322 kB; lsn=0/19B0548, redo lsn=0/19B0510
^C  
^Cthibault@vps-90c5b096:/docker/cjd80# B) Déclenche l'appel qui échoueue
curl -sS https://cjd80.fr/api/ideas > /dev/null
curl -sS https://cjd80.fr/api/events > /dev/null
thibault@vps-90c5b096:/docker/cjd80$ curl -sS https://cjd80.fr/api/ideas > /dev/null
curl -sS https://cjd80.fr/api/events > /dev/null
thibault@vps-90c5b096:/docker/cjd80$ # Depuis le client éphémère sur le réseau "proxy"
docker run --rm -it --network=proxy postgres:16-alpine sh -lc '
PGPASSWORD="BY7Lrta5jBI49aAX" psql -h postgres -U cjduser -d cjd_amiens <<SQL
-- variantes fréquentes selon Drizzle / Express :
SELECT * FROM ideas ORDER BY created_at DESC LIMIT 5;
SELECT * FROM events ORDER BY date DESC NULLS LAST LIMIT 5;
-- parfois avec schéma qualifié :
SELECT * FROM public.ideas LIMIT 1;
SELECT * FROM public.events LIMIT 1;
SQL'
                  id                  |                     title                     |                              description                               |         created_at         | proposed_by |     proposed_by_email      | deadline |         updated_at         | updated_by |  status  
--------------------------------------+-----------------------------------------------+------------------------------------------------------------------------+----------------------------+-------------+----------------------------+----------+----------------------------+------------+----------
 6eb1185f-67a2-4920-adde-07363b6c483f | Test correction WebSocket                     | Idée de test après corrections                                         | 2025-08-20 07:13:41.563302 | Admin Test  | admin@test.com             |          | 2025-08-20 07:13:41.563302 |            | pending
 440039bf-d815-4638-84c8-b7eba5c2dc06 | Découvrir la Plongée                          | Utiliser les méthodes de gestion du stress de la plongée en entreprise | 2025-08-20 07:12:09.366206 | Thibault    | thibault@youcom.io         |          | 2025-08-20 07:12:09.366206 |            | pending
 9ee15fac-d544-466c-8da3-3dc935b8f731 | Découverte de l'equicoaching                  |                                                                        | 2025-08-19 21:18:20.481352 | Celine      | cdailly@gonthiez-freres.fr |          | 2025-08-19 21:58:01.541781 | admin      | approved
 69a87658-3b47-48c2-8792-0c2ff9329694 | Faire des visites d'entreprises régulièrement |                                                                        | 2025-08-19 21:18:20.444271 | Membre CJD  | membre@cjd-amiens.fr       |          | 2025-08-19 21:18:20.444271 |            | approved
 a36910eb-03d6-47a3-94a0-3b2c47d76b58 | Des vis ma vie d'autres métiers               | Immersion d'une journée dans le quotidien d'un autre JD?               | 2025-08-19 21:18:20.40729  | Celine      | cdailly@gonthiez-freres.fr |          | 2025-08-19 21:18:20.40729  |            | approved
(5 rows)

                  id                  |               title                |                                              description                                               |        date         |         created_at         |                                                          hello_asso_link                                                           |         updated_at         | updated_by |             location             | max_participants |  status   
--------------------------------------+------------------------------------+--------------------------------------------------------------------------------------------------------+---------------------+----------------------------+------------------------------------------------------------------------------------------------------------------------------------+----------------------------+------------+----------------------------------+------------------+-----------
 4ba276f9-10e4-4d8b-ba73-7e8342c0218c | Afterwork Innovation & Numérique   | Soirée networking autour des innovations numériques                                                    | 2025-12-05 18:00:00 | 2025-08-19 21:18:20.66656  |                                                                                                                                    | 2025-08-19 21:18:20.66656  |            | Amiens - La Halle aux Idées      |                  | published
 762c2785-2a24-421b-ae39-dd716e544c1a | Assemblée Générale CJD Amiens 2025 | Assemblée générale annuelle - présentation des projets et votes                                        | 2025-11-20 18:30:00 | 2025-08-19 21:18:20.630024 |                                                                                                                                    | 2025-08-19 21:18:20.630024 |            | Amiens - Siège CJD               |                  | published
 12360c34-1ad8-4393-9347-d0f2043e3f91 | Formation IA Niveau 2              | 9 et 10 Octobre à Amiens - Approfondissement IA                                                        | 2025-10-09 09:00:00 | 2025-08-19 21:18:20.593393 |                                                                                                                                    | 2025-08-19 21:18:20.593393 |            | Amiens - Centre de formation CJD |                  | published
 c3d2cd27-a83c-44c9-9216-93c540b7f555 | Formation IA Niveau 1              | Le 7 et 8 octobre à Amiens 860€HT. Formation intensive sur l'intelligence artificielle pour dirigeants | 2025-10-07 09:00:00 | 2025-08-19 21:18:20.556459 |                                                                                                                                    | 2025-08-19 21:18:20.556459 |            | Amiens - Centre de formation CJD |                  | published
 8a8adb01-46b6-400d-8c8a-27a09ac10670 | Séminaire de rentrée CJD 2025      | Mont St Michel - Weekend de rentrée pour tous les membres                                              | 2025-09-15 09:00:00 | 2025-08-19 21:18:20.518273 | https://www.helloasso.com/associations/centre-des-jeunes-dirigeants-de-la-section-d-amiens/paiements/seminaire-de-rentree-cjd-2025 | 2025-08-19 21:18:20.518273 |            | Mont Saint-Michel                |                  | published
(5 rows)

                  id                  |                    title                    | description |         created_at         | proposed_by |  proposed_by_email   | deadline |         updated_at         | updated_by |  status  
--------------------------------------+---------------------------------------------+-------------+----------------------------+-------------+----------------------+----------+----------------------------+------------+----------
 0d276fc7-d480-4705-aa00-755528b2ce52 | J'aimerais participer à une belle randonnée |             | 2025-08-19 21:18:19.963038 | Membre CJD  | membre@cjd-amiens.fr |          | 2025-08-19 21:18:19.963038 |            | approved
(1 row)

                  id                  |             title             |                        description                        |        date         |         created_at         |                                                          hello_asso_link                                                           |         updated_at         | updated_by |     location      | max_participants |  status   
--------------------------------------+-------------------------------+-----------------------------------------------------------+---------------------+----------------------------+------------------------------------------------------------------------------------------------------------------------------------+----------------------------+------------+-------------------+------------------+-----------
 8a8adb01-46b6-400d-8c8a-27a09ac10670 | Séminaire de rentrée CJD 2025 | Mont St Michel - Weekend de rentrée pour tous les membres | 2025-09-15 09:00:00 | 2025-08-19 21:18:20.518273 | https://www.helloasso.com/associations/centre-des-jeunes-dirigeants-de-la-section-d-amiens/paiements/seminaire-de-rentree-cjd-2025 | 2025-08-19 21:18:20.518273 |            | Mont Saint-Michel |                  | published
(1 row)

thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80
docker compose exec app sh -lc 'printenv | grep ^DATABASE_URL='
DATABASE_URL=postgresql://cjduser:BY7Lrta5jBI49aAX@postgres:5432/cjd_amiens
thibault@vps-90c5b096:/docker/cjd80$ # search_path par défaut sur 'public' pour l'utilisateur de l'app
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "ALTER ROLE cjduser SET search_path TO public;"

# s'assurer que tout appartient bien à cjduser
docker compose exec postgres psql -U cjduser -d cjd_amiens -v ON_ERROR_STOP=1 -c "
DO \$\$ DECLARE r record; BEGIN
  FOR r IN SELECT table_schema, table_name FROM information_schema.tables WHERE table_schema='public' LOOP
    EXECUTE format('ALTER TABLE %I.%I OWNER TO cjduser', r.table_schema, r.table_name);
  END LOOP;
  FOR r IN SELECT sequence_schema, sequence_name FROM information_schema.sequences WHERE sequence_schema='public' LOOP
    EXECUTE format('ALTER SEQUENCE %I.%I OWNER TO cjduser', r.sequence_schema, r.sequence_name);
  END LOOP;
END \$\$;"
ALTER ROLE
DO
thibault@vps-90c5b096:/docker/cjd80$ cd /docker/cjd80 && docker compose up -d
[+] Running 2/2
 ✔ Container cjd80-postgres  Running                                                                0.0s 
 ✔ Container cjd80-app       Running                                                                0.0s 
thibault@vps-90c5b096:/docker/cjd80$ # Idées (statut seulement)
curl -sS -o /dev/null -w "%{http_code}\n" https://cjd80.fr/api/ideas
# Events
curl -sS -o /dev/null -w "%{http_code}\n" https://cjd80.fr/api/events
# Santé
curl -sS -o /dev/null -w "%{http_code}\n" https://cjd80.fr/api/health
200
200
200
thibault@vps-90c5b096:/docker/cjd80$ # Idées publiées/validées ?
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "SELECT status, count(*) FROM ideas GROUP BY status;"
# Events publiés et à venir ?
docker compose exec postgres psql -U cjduser -d cjd_amiens -c "SELECT count(*) FROM events WHERE status='published' AND (date IS NULL OR date >= now());"
  status  | count 
----------+-------
 approved |    17
 pending  |     2
(2 rows)

 count 
-------
     5
(1 row)

thibault@vps-90c5b096:/docker/cjd80$ # Le conteneur app doit atteindre 'postgres:5432'
docker compose exec app sh -lc 'nc -zv postgres 5432 || true'
postgres (172.18.0.3:5432) open
thibault@vps-90c5b096:/docker/cjd80$ 
