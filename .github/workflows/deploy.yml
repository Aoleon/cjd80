name: Deploy to VPS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # (facultatif) petit pré-check clair des secrets
      - name: Precheck secrets
        env:
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          VPS_HOST:    ${{ secrets.VPS_HOST }}
          VPS_PORT:    ${{ secrets.VPS_PORT }}
          VPS_USER:    ${{ secrets.VPS_USER }}
        run: |
          for v in VPS_SSH_KEY VPS_HOST VPS_PORT VPS_USER; do
            if [ -z "${!v}" ]; then echo "::error::Missing secret: $v"; exit 1; fi
          done

      - name: Write SSH key file (normalize LF) & start agent
        env:
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          umask 077
          # Normalise les fins de ligne et écrit la clé privée dans un fichier
          printf '%s\n' "$VPS_SSH_KEY" | tr -d '\r' > ~/.ssh/id_ed25519
          # Vérifie le format de la clé (doit afficher BEGIN/END et l’empreinte)
          head -1 ~/.ssh/id_ed25519; tail -1 ~/.ssh/id_ed25519; ssh-keygen -lf ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519

      - name: Trust VPS host key
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
        run: |
          ssh-keyscan -p "$VPS_PORT" "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Deploy on VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          ssh -p "$VPS_PORT" "$VPS_USER@$VPS_HOST" "bash /docker/cjd80/deploy.sh"
